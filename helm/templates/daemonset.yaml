---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: knls
  labels:
    app: knls
spec:
  minReadySeconds: 60

  updateStrategy:
{{ if .Values.hostNetwork }}
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 10%
{{ else }}
    rollingUpdate:
      maxSurge: 10%
      maxUnavailable: 0
{{ end }}

  selector:
    matchLabels:
      app: knls
  template:
    metadata:
      labels:
        app: knls
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum |quote }}
    spec:
      priorityClassName: system-cluster-critical
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists

      serviceAccountName: knls
      enableServiceLinks: false
      hostNetwork: {{ .Values.hostNetwork }}
{{- with .Values.hostAliases }}
      hostAliases:
{{ . |toYaml |indent 6 }}
{{- end }}

      containers:
      - name: knls
        args:
        - --config=/config/knls.yaml
        image: {{.Values.image.repo}}:{{.Values.image.tag}}
        imagePullPolicy: {{ default "IfNotPresent" .Values.pullPolicy }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            add:
            - NET_ADMIN
        env:
        - name: NODE_NAME
          valueFrom: {fieldRef: {fieldPath: spec.nodeName}}
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
{{- if .Values.connectivity }}
        - name: cni-config
          mountPath: /etc/cni/net.d
{{-   if eq .Values.connectivity "wireguard" }}{{ with .Values.wireguard}}
        - name: wireguard
          mountPath: /var/lib/knls/wireguard
{{-   end }}{{ end }}
{{- end }}
        resources:
{{ .Values.resources.knls |toYaml | indent 10 }}

{{- if .Values.dns }}
      - name: unbound
        args: [ "-d", "-p", "-c", "/config/unbound.conf" ]
        image: docker.io/mcluseau/unbound:1.20.0
        imagePullPolicy: IfNotPresent
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - mountPath: /zones
          name: zones
          readOnly: true
        resources:
{{ .Values.resources.unbound |toYaml | indent 10 }}
{{- end }}

      volumes:
      - name: config
        configMap:
          name: knls-config
      - name: empty
        emptyDir:
          medium: Memory
          sizeLimit: 10Mi
      - name: zones
        configMap:
          name: knls-zones
{{- if .Values.connectivity }}
      - name: cni-config
        hostPath:
          type: DirectoryOrCreate
          path: /etc/cni/net.d
{{- end }}
{{- if eq .Values.connectivity "wireguard" }}{{ with .Values.wireguard}}
      - name: wireguard
        hostPath:
          type: DirectoryOrCreate
          path: {{ .key_dir }}
{{- end }}{{ end }}

